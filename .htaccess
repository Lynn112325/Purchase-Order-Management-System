# 重寫引擎（Rewrite Engine)
# 主要功能:
# 簡化 URL, 例: example.com/products.php?id=123 重寫為 example.com/products/123
# 隱藏實際路徑
# 支持 URL 的重定向

RewriteEngine On
# 重寫條件（RewriteCond）:
# 檢查請求的 URI 是否不是靜態資源
# 只有當這個條件滿足時，隨後的重寫規則才會被應用
RewriteCond %{REQUEST_URI} !\.(?:css|js|jpe?g|gif|png)$ [NC]
# %{REQUEST_URI}：這個變數包含了請求的 URI（URL 中域名之後的部分）
# !：感嘆號表示否定條件
# (?:...) 是一個非捕獲分組，$ 表示字符串的結尾
# [NC]：這個標誌表示「不區分大小寫」（No Case），即匹配不會區分大小寫

# 重寫規則：這行定義了當滿足前面條件時將要應用的重寫規則
# 如果不是靜態資源, 將 URL 重寫為 index.php
RewriteRule ^([^/]+)/? index.php?url=$1 [L,QSA]
# ^([^/]+)/?：這段正則表達式模式匹配以一個或多個不包含斜杠（/）的字符開頭的字符串
# ^ 表示字符串的開始，([^/]+) 捕獲這些字符（直到遇到斜杠或字符串結尾）
# /? 表示可選的結尾斜杠
# index.php?url=$1：如果模式匹配成功，則將 URL 重寫為 index.php
# 並將捕獲的部分作為名為 url 的查詢參數傳遞
# $1 代表第一個捕獲組的內容，即 ([^/]+) 所匹配的部分
# [L,QSA]：這些標誌改變了重寫規則的行為。
# L：這個標誌表示「最後」（Last），如果這條規則匹配，則不會再處理其他規則。
# QSA：這個標誌表示「查詢字符串附加」（Query String Append）
# 即將原請求中的查詢字符串附加到重寫的 URL 中。

# 靜態資源 （Static Resources）是指在 Web 開發中，未經過服務器端處理或動態生成的文件。
# 這些資源通常是固定的，不會根據用戶的請求或交互而改變。
# e.g. style.css, script.js, image.jpg, logo.png
# 快速加載：因為靜態資源不需要服務器進行計算或查詢數據庫，通常加載速度較快。
# 緩存友好：靜態資源可以被瀏覽器和 CDN（內容分發網絡）緩存，進一步提高加載性能。

# 動態資源（Dynamic Resources）：指的是在用戶請求時由服務器生成的內容，通常涉及到數據庫查詢或應用邏輯處理
# 生成的結果會根據用戶的請求或其他條件而不同，例如 PHP、Python 或 Ruby 等服務器端語言生成的頁面。
# e.g. index.php?id=123，這個請求可能會根據 id 從數據庫中提取不同的內容